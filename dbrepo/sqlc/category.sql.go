// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: category.sql

package dbrepo

import (
	"context"
	"database/sql"
)

const CreateCategory = `-- name: CreateCategory :execresult
INSERT INTO category SET category_name=?
`

func (q *Queries) CreateCategory(ctx context.Context, categoryName string) (sql.Result, error) {
	return q.db.ExecContext(ctx, CreateCategory, categoryName)
}

const GetAllCategory = `-- name: GetAllCategory :many
SELECT id, category_name, created_at, updated_at FROM category
`

func (q *Queries) GetAllCategory(ctx context.Context) ([]*Category, error) {
	rows, err := q.db.QueryContext(ctx, GetAllCategory)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []*Category{}
	for rows.Next() {
		var i Category
		if err := rows.Scan(
			&i.ID,
			&i.CategoryName,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
